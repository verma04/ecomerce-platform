// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum user_type {
  admin
  manager
}

// @admin
model user {
  id        String     @id @default(cuid())
  email     String     @unique
  name      String
  password  String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  role      user_type  @default(admin)
  isActive  Boolean    @default(true)
  category  category[]
  location  location[]
}

model category {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      user     @relation(fields: userId, references: id)
  userId    String
}

model location {
  id        String   @id @default(cuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      user     @relation(fields: userId, references: id)
  userId    String
  status    Boolean
}

//@Merchant

model qrcode {
  qrcode String
  user   merchant @relation(fields: userId, references: id)
  userId String   @unique
}

model merchant {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  slug      String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  role      user_type @default(admin)
  isActive  Boolean   @default(true)

  Image             Image[]
  category          merchantCategory[]
  kyc               merchantKyc?
  loginSession      loginSession[]
  merchantWareHouse merchantWareHouse[]
  qrcode            qrcode?
}

model loginSession {
  id         String      @id @default(cuid())
  user       merchant    @relation(fields: userId, references: id)
  userId     String      @unique
  deviceInfo deviceInfo?
  latitude   String
  longitude  String
  deviceId   String
  city       String
  ipAddress  String
  token      String
  logout     Boolean     @default(false)
}

enum deviceType {
  web
  android
  ios
}

model deviceInfo {
  id             String       @id @default(cuid())
  user           loginSession @relation(fields: loginSessionId, references: id)
  loginSessionId String       @unique
  device         deviceType
}

model merchantKyc {
  id      String                @id @default(cuid())
  gstIn   String
  user    merchant              @relation(fields: userId, references: id)
  userId  String                @unique
  address merchantAddress?
  account merchantBankAccount[]
}

model merchantAddress {
  addressLin1   String
  addressLine2  String
  landMark      String
  state         String
  city          String
  pinCode       String
  kyc           merchantKyc @relation(fields: merchantKycId, references: id)
  merchantKycId String      @unique
}

model merchantBankAccount {
  accountNumber String
  ifscCode      String
  bankName      String
  kyc           merchantKyc @relation(fields: merchantKycId, references: id)
  merchantKycId String      @unique
}

model Image {
  id               String            @id @default(cuid())
  title            String
  description      String
  caption          String
  alt              String
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  user             merchant          @relation(fields: userId, references: id)
  userId           String
  merchantCategory merchantCategory?
  sliderImage      sliderImage?
}

model sliderImage {
  categoryImage      Image            @relation(fields: imageId, references: id)
  imageId            String           @unique
  merchantCategory   merchantCategory @relation(fields: merchantCategoryId, references: id)
  merchantCategoryId String           @unique
}

model merchantCategory {
  id            String        @id @default(cuid())
  sort          Int           @default(autoincrement())
  title         String
  description   String
  categoryImage Image         @relation(fields: imageId, references: id)
  imageId       String        @unique
  user          merchant      @relation(fields: userId, references: id)
  userId        String
  sliderImage   sliderImage[]
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  status        Boolean       @default(true)
}

model merchantWareHouse {
  id           String    @id @default(cuid())
  gstIn        String
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  merchant     merchant? @relation(fields: [merchantId], references: [id])
  merchantId   String
  addressLin1  String
  addressLine2 String
  landMark     String
  state        String
  city         String
  pinCode      String
  status       Boolean   @default(true)
}
